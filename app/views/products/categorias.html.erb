<% content_for :titulo_pagina do %>Categorias<% end %>
<% content_for :javascript do %>
<%= javascript_include_tag "http://code.jquery.com/jquery-1.7.min.js" %>
<script type="text/javascript">jQuery.noConflict();</script>
<%= javascript_include_tag "highcharts", "modules/exporting", "chosen.jquery.min", "tooltipsy.min", "highcharts_graficar" %>
<script type="text/javascript">
function agregar_tooltips() {
	jQuery('div[id^="tooltipsy"]').remove()
	jQuery('li.search-choice > span').each(function(i) {
		jQuery(this).tooltipsy({
			content: jQuery(this).parent().parent().parent().siblings().first().attr('title'),
			alignTo: 'cursor',
			offset: [10, 10]
		});
	});
}

var spinner = '<%= image_tag "ajax-bar-loader.gif", :size => "238x30" %>';
var country_id = <%=@country_id%>;

var globalchart;
var globalcat = {};
var globalret = {};
var globalmar = {};
var global_cat_selected = null;
var global_querystring = null;

function crear_query_string() {
	var query_string = '';

	if (jQuery('#categoria_pulldown').val()) {
		query_string += '&categoria=' + jQuery('#categoria_pulldown').val().join(',');
	}

	if (jQuery('#retailer_pulldown').val()) {
		query_string += '&retailer=' + jQuery('#retailer_pulldown').val().join(',');
	}

	if (jQuery('#marca_pulldown').val()) {
		query_string += '&marca=' + jQuery('#marca_pulldown').val().join(',');
	}

	if (jQuery('#fecha_desde').val()) {
		query_string += '&fecha_desde=' + jQuery('#fecha_desde').val();
	}

	if (jQuery('#fecha_hasta').val()) {
		query_string += '&fecha_hasta=' + jQuery('#fecha_hasta').val();
	}

	return query_string;
}

function init_chart(params) {
	var options = {
		chart: {
			renderTo: 'chart',
			zoomType: 'x'
		},
		title: { 
			text: ( params.hasOwnProperty('title') ? params['title'] : null )
		},
		subtitle: {
			text: ( params.hasOwnProperty('subtitle') ? params['subtitle'] : null )
		},
		credits: {
			enabled: false
		},
		xAxis: {
			type: 'datetime',
        	maxZoom: 604800000
		},
		yAxis: {
			title: {
				text: 'Precio promedio en pesos'
			},
			labels: {
				formatter: function() {
					return Highcharts.numberFormat(this.value, 0, ',', '.');
				}
			}
		},
		plotOptions: {
			series: {
				animation: false,
				marker: {
					enabled: true,
					symbol: 'url(/images/blank.png)'
				}
			}
		},
		exporting: {
			buttons: {
				exportButton: {
					menuItems: [ {}, {}, {}, {} ]
				}
			}
		} 
	};

	if ( params.hasOwnProperty('backButton') ) {
		options.exporting.buttons.backButton = {
			_titleKey: 'backButtonTitle',
			x: -62,
			symbol: 'square',
			onclick: function() {
				if ( globalret.hasOwnProperty(params['backButton']) ) {
					init_chart({title: params['backButton'], backButton: 'Categorias'});
					dibujar({ categoria: params['backButton'] });
				} else {
					init_chart({title: params['backButton']});
					dibujar({});	
				}
			}
		};
	}

	globalchart = new Highcharts.Chart(options);
}

function graficar() {
	init_chart({title: 'Categor√≠as'});
	globalchart.showLoading();
	jQuery('#boton_ver').attr('disabled', true);
	var querystring = crear_query_string();
	if (querystring == global_querystring) {
		dibujar({});
		return;
	} else {
		global_querystring = querystring;
	}
	jQuery.ajax({
		url: "http://api.<%=@hostname%>/products/get_avg_prices",
		data: global_querystring,
		dataType: 'jsonp',
		statusCode: {
			200: function(data) {
				global_cat_selected = null;
				globalcat = {};
				globalret = {};
				globalmar = {};
				jQuery.each(data, function(i,v) {
					add_valor_cat(v.property_value_name, v.x, v.y);
					add_valor_ret(v.property_value_name, v.retailer_name, v.x, v.y);
					add_valor_mar(v.property_value_name, v.retailer_name, v.property_value_2_name, v.x, v.y);
				});
				dibujar({});
			},
			400: function() {
				alert('Error 400!');
			}
		}
	});
}

function add_valor_cat(cat, fecha, valor) {
	if (!globalcat.hasOwnProperty(cat)) {
		globalcat[cat] = {};
	}
	if (!globalcat[cat].hasOwnProperty(fecha)) {
		globalcat[cat][fecha] = [];
	}
	globalcat[cat][fecha].push(valor);
}

function add_valor_ret(cat, ret, fecha, valor) {
	if (!globalret.hasOwnProperty(cat)) {
		globalret[cat] = {};
	}
	if (!globalret[cat].hasOwnProperty(ret)) {
		globalret[cat][ret] = {};
	}
	if (!globalret[cat][ret].hasOwnProperty(fecha)) {
		globalret[cat][ret][fecha] = [];
	}
	globalret[cat][ret][fecha].push(valor);	
}

function add_valor_mar(cat, ret, mar, fecha, valor) {
	if (!globalmar.hasOwnProperty(cat)) {
		globalmar[cat] = {};
	}
	if (!globalmar[cat].hasOwnProperty(ret)) {
		globalmar[cat][ret] = {};
	}
	if (!globalmar[cat][ret].hasOwnProperty(mar)) {
		globalmar[cat][ret][mar] = {};
	}
	if (!globalmar[cat][ret].hasOwnProperty(fecha)) {
		globalmar[cat][ret][mar][fecha] = [];
	}
	globalmar[cat][ret][mar][fecha].push(valor);	
}

function dibujar(params) {
	var data;
	if (params.hasOwnProperty('categoria')) {
		if (params.hasOwnProperty('retailer')) {
			data = globalmar[params['categoria']][params['retailer']];
		} else {
			data = globalret[params['categoria']];
		}
	} else {
		data = globalcat;
	}

	jQuery.each(data, function(i,v) {
		var tmp = { 
			name: i, 
			connectNulls: true,
			data: new Array,
			events: {
				click: function() {
					if (globalret.hasOwnProperty(this.name)) {
						global_cat_selected = this.name;
						init_chart({title: this.name, backButton: 'Categorias'});
						globalchart.showLoading();
						dibujar({categoria: this.name});
					}
					if (
						globalmar.hasOwnProperty(global_cat_selected)
						&&
						globalmar[global_cat_selected].hasOwnProperty(this.name)
					) {
						init_chart({title: global_cat_selected, subtitle: this.name, backButton: global_cat_selected});
						globalchart.showLoading();
						dibujar({categoria: global_cat_selected, retailer: this.name});
					}
				}
			}
		};
		jQuery.each(v, function(j,w) {
			var total = 0;
			for (var k = 0; k < w.length; k++) {
				total += w[k];
			}
			tmp['data'].push({
				x: parseInt(j),
				y: Math.round(total/w.length)
			});
		})
		globalchart.addSeries(tmp);
	});

	globalchart.hideLoading();
	jQuery('#boton_ver').removeAttr('disabled');
}

jQuery(window).load(function() {
	jQuery(".chzn-select").chosen();
	jQuery('.pulldown_selector').bind('change', agregar_tooltips);
	jQuery(function() {
		var dates = jQuery( "#fecha_desde, #fecha_hasta" ).datepicker({
			changeMonth: true,
			onSelect: function( selectedDate ) {
				var option = this.id == "fecha_desde" ? "minDate" : "maxDate",
					instance = jQuery( this ).data( "datepicker" ),
					date = jQuery.datepicker.parseDate(
						instance.settings.dateFormat ||
						jQuery.datepicker._defaults.dateFormat,
						selectedDate, instance.settings );
				dates.not( this ).datepicker( "option", option, date );
			}
		});
	});
});
</script>
<%= javascript_include_tag "jquery-ui-1.8.14.custom.min", "jquery-ui-datepicker-es" %>
<% end %>

<style type="text/css">
.pulldown_selector {
	font-size: 12px;
	width: 160px;
}
</style>

<div style="position: relative; height: 100px;">

<div style="position: absolute; left: 0px;">
<span class="pulldown_span" id="span_categoria_pulldown">
<select name="categoria" id="categoria_pulldown" class="pulldown_selector chzn-select" size="4" multiple title="Categoria" data-placeholder="Categoria">
<option></option>
<% PropertyValue.where(:property_id => 1).order(:value).each do |r| %>
<option value="<%=r.id%>"><%=r.value%></option>
<% end %>
</select>
</span>
</div>

<div style="position: absolute; left: 165px;">
<span class="pulldown_span" id="span_retailer_pulldown">
<select name="retailer" id="retailer_pulldown" class="pulldown_selector chzn-select" size="4" multiple title="Retailer" data-placeholder="Retailer">
<option></option>
<% Retailer.where(:country_id => @country_id).order(:name).each do |r| %>
<option value="<%=r.id%>"><%=r.name%></option>
<% end %>
</select>
</span>
</div>

<div style="position: absolute; left: 330px;">
<span class="pulldown_span" id="span_marca_pulldown">
<select name="marca" id="marca_pulldown" class="pulldown_selector chzn-select" size="4" multiple title="Marca" data-placeholder="Marca">
<option></option>
<% PropertyValue.where(:property_id => 4).order(:value).each do |r| %>
<option value="<%=r.id%>"><%=r.value%></option>
<% end %>
</select>
</span>
</div>

<div style="position: absolute; left: 510px;" class="date_div">
Desde:
<input type="text" readonly class="date_input" name="fecha_desde" id="fecha_desde" size="8"/> 
</div>

<div style="position: absolute; left: 620px;" class="date_div">
Hasta:
<input type="text" readonly class="date_input" name="fecha_hasta" id="fecha_hasta" size="8"/> 
</div>

<input type="button" class="control" onClick="graficar();" id="boton_ver" value="Ver" style="position: absolute; left: 730px; top: 3px;"/>

</div>

<div id="chart" style="height: 400px; width: 800px;"></div>