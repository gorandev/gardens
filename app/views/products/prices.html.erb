<% content_for :titulo_pagina do %>Precios<% end %>
<% content_for :javascript do %>
<%= javascript_include_tag "https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js" %>
<script type="text/javascript">jQuery.noConflict();</script>
<%= javascript_include_tag "highcharts", "modules/exporting", "chosen.jquery.min", "tooltipsy.min" %>

<script type="text/javascript">
function agregar_tooltips() {
	jQuery('div[id^="tooltipsy"]').remove()
	jQuery('li.search-choice > span').each(function(i) {
		jQuery(this).tooltipsy({
			content: jQuery(this).parent().parent().parent().siblings().first().attr('title'),
			alignTo: 'cursor',
			offset: [10, 10]
		});
	});
}

var spinner = '<%= image_tag "ajax-bar-loader.gif", :size => "238x30" %>';
var pulldowns_ok = [
	{ 
		name: "Categoria",
		campo: "categoria"
	},
	{
		name: "Retailer",
		campo: "retailer" 	
	}
];
<% for p in @properties %>
pulldowns_ok.push({ name: '<%=p[:name]%>', campo: '<%=p[:field]%>', id: <%=p[:id]%> });
<% end %>

function find_prop(campo) {
	var indice = -1;
	jQuery.each(pulldowns_ok, function(i, v) {
		if (v.campo == campo) {
			indice = i;
		}
	})
	return indice;
}

function dibujar_pulldown_productos(obj) {
	var indice;
	if (obj == 'start_up') {
		indice = -1;
	} else {
		indice = find_prop(obj.name);
		if (indice < 0) {
			return;
		}
	}

	agregar_tooltips();

	var data = '';

	var filtros = [];
	for ( var i = 0; i <= indice; i++ ) {
		if (jQuery('#' + pulldowns_ok[i].campo + '_pulldown').val()) {
			if (pulldowns_ok[i].campo == 'retailer') {
				data += 'retailers=' + jQuery('#' + pulldowns_ok[i].campo + '_pulldown').val().join(',');
				data += '&';
			} else {
				filtros.push(jQuery('#' + pulldowns_ok[i].campo + '_pulldown').val());	
			}
		}
	}

	for ( var i = indice+1; i < pulldowns_ok.length; i++ ) {
		jQuery('#span_' + pulldowns_ok[i].campo + '_pulldown').html(spinner);
	}
	jQuery('#span_producto_pulldown').html(spinner);

	if (filtros.length > 0) {
		data += 'property_values=' + filtros.join(',');	
	}
	
	data += '&country=<%= @country_id %>&fast=yeah';

	jQuery.ajax({
		url: "/products/search",
		data: data,
		cache: false,
		statusCode: {
			200: function(data) {
				llenar_pulldown_productos(indice, data);
			},
			400: function() {
				alert('Error 400!');
			}
		}
	});
}

function llenar_pulldown_productos(indice, data) {
	llenar_pulldown(data, 'producto', 'Producto');
	
	var ids_productos = new Array();
	jQuery.each(data, function(i, v){
		ids_productos.push(v.id);
	});

	jQuery.ajax({
		url: "/property_values/search",
		data: 'products=' + ids_productos.join(','),
		cache: false,
		statusCode: {
			200: function(data) {
				llenar_pulldowns_propiedades(indice, data, ids_productos);
			},
			400: function() {
				alert('Error 400!');
			}
		}
	});
}

function llenar_pulldowns_propiedades(indice, data, ids_productos) {
	for (var i = indice+1; i < pulldowns_ok.length; i++) {
		var campo = pulldowns_ok[i].campo;
		var name = pulldowns_ok[i].name;

		if (campo == 'retailer') {
			jQuery.ajax({
				url: "/retailers/search",
				data: 'products=' + ids_productos.join(',') + '&country=<%= @country_id %>',
				cache: false,
				statusCode: {
					200: function(data) {
						llenar_pulldown(data, 'retailer', 'Retailer');
					},
					400: function() {
						alert('Error 400!');
					}
				}
			});
			continue;
		}

		var valores = [];

		jQuery.each(data, function(i,v) {
			if (v.descripcion_property == campo) {
				valores.push({ id: v.id, value: v.value });
			}
		})

		llenar_pulldown(valores, campo, name);
	}
}

function llenar_pulldown(data, campo, name) {
	var change = 'onChange="set_max_min_date();" ';
	if (campo != 'producto') {
		change = 'onChange="dibujar_pulldown_productos(this);" ';
	}

	var select = generate_select(campo, name, change);

	var props_ordered = data.sort(function(a, b) {
		return ( a.value < b.value ? -1 : (a.value > b.value ? 1 : 0 ) );
	});
	
	for (var i = 0; i < props_ordered.length; i++) {
		select.append('<option value="' + props_ordered[i].id + '">' + props_ordered[i].value + '</option');
	}

	jQuery('#span_' + campo + '_pulldown').html(select);
	jQuery('#' + campo + '_pulldown').chosen();
	jQuery('#' + campo + '_pulldown').bind('change', agregar_tooltips);
}

function generate_select(campo, name, change) {
	return jQuery('<select ' + change + 'name="' + campo + '" id="' + campo + '_pulldown" class="pulldown_selector chzn-select" size="4" multiple  title="' + name + '" data-placeholder="' + name + '"></select>');
}

var prices_last_data_sent = {};
var data_graficos = {};

function graficar(id) {
	var data = 'product=' + jQuery('#producto_pulldown').val().join(',');

	data +='&currency=<%=@currency_id%>';

	if (jQuery('#fecha_desde').val()) {
		data += '&date_from=' + jQuery('#fecha_desde').val();
	}

	if (jQuery('#fecha_hasta').val()) {
		data += '&date_to=' + jQuery('#fecha_hasta').val();
	}

	data += '&no_limit=1';

	if (prices_last_data_sent.hasOwnProperty(id) && data == prices_last_data_sent[id]) {
		return dibujar_data(id);
	} else {
		prices_last_data_sent[id] = data;
	}

	jQuery.ajax({
		url: "/prices/search",
		data: data,
		cache: false,
		statusCode: {
			200: function(data) {
				data_graficos[id] = data;
				dibujar_data(id);
			},
			400: function() {
				alert('Error 400!');
			}
		}
	});
}

function dibujar_data(id) {
	var data = data_graficos[id];

	var prods = {};
	var lineas = {};
	var lineas_por_fecha = {};
	var retailers = {};

	var id_producto;
	if (arguments[1]) {
		id_producto = arguments[1];
	}

	jQuery.each(data, function(i,v) {
		if (id_producto && v.id_product != id_producto) {
			return;
		}

		if (!retailers.hasOwnProperty(v.retailer)) {
			retailers[v.retailer] = v.retailer_color;
		}

		if (!prods.hasOwnProperty(v.id_product)) {
			prods[v.id_product] = v.name_product;
		}

		if (!lineas.hasOwnProperty(v.id_product)) {
			lineas[v.id_product] = {}
		}

		if (!lineas_por_fecha.hasOwnProperty(v.id_product)) {
			lineas_por_fecha[v.id_product] = {}
		}

		if (!lineas[v.id_product].hasOwnProperty(v.retailer)) {
			lineas[v.id_product][v.retailer] = {};
		}

		var fecha = v.price_date.split('-');
		var fecha_utc = Date.UTC(fecha[0], fecha[1]-1, fecha[2]);

		if (!lineas[v.id_product][v.retailer].hasOwnProperty(fecha_utc)) {
			lineas[v.id_product][v.retailer][fecha_utc] = new Array;
		}

		if (!lineas_por_fecha[v.id_product].hasOwnProperty(fecha_utc)) {
			lineas_por_fecha[v.id_product][fecha_utc] = new Array;
		}

		lineas[v.id_product][v.retailer][fecha_utc].push(v.price);
		lineas_por_fecha[v.id_product][fecha_utc].push(v.price);
	});

	var lineas_promediadas = {};
	var titulo;

	if (Object.keys(prods).length == 1) {
		jQuery.each(lineas[Object.keys(prods)[0]], function(i,v) {
			lineas_promediadas[i] = new Array;
			jQuery.each(v, function(j,x) {
				if (x.length > 1) {
					var total = 0;
					for (var z = 0; z < x.length; z++) {
						total += x[z];
					}
					lineas_promediadas[i].push([parseInt(j), Math.round(total/(x.length))]);
				} else {
					lineas_promediadas[i].push([parseInt(j), x[0]]);
				}
			});
		});

		titulo = prods[Object.keys(prods)[0]];
	}

	if (Object.keys(prods).length > 1) {
		jQuery.each(lineas_por_fecha, function(i,v) {
			lineas_promediadas[prods[i]] = new Array;
			jQuery.each(v, function(j,x) {
				if (x.length > 1) {
					var total = 0;
					for (var z = 0; z < x.length; z++) {
						total += x[z];
					}
					lineas_promediadas[prods[i]].push({
						x: parseInt(j),
						y: Math.round(total/(x.length)),
						id_producto: i
					});
				} else {
					lineas_promediadas[prods[i]].push({
						x: parseInt(j),
						y: x[0],
						id_producto: i
					});
				}
			});
		})

		titulo = 'Varios productos';
	}

	var series = new Array;
	if (titulo == 'Varios productos') {
		jQuery.each(lineas_promediadas, function(i,v) {
			series.push({
			 	name: i,
			 	data: v
			 });
		});
	} else {
		jQuery.each(lineas_promediadas, function(i,v) {
			series.push({
			 	name: i,
			 	color: retailers[i],
			 	data: v
			 });
		});
	}

	var options = {
		chart: {
			renderTo: 'chart_' + id,
			zoomType: 'x'
		},
		title: {
			text: titulo,
			style: {
				fontFamily: 'Verdana',
				fontSize: '12px',
				fontWeight: 'bold'
			}
		},
		xAxis: {
			type: 'datetime'
		},
		yAxis: {
			title: {
				text: 'Precio'
			}
		},
		credits: {
			enabled: false
		},
		tooltip: {
			formatter: function() {
				var tooltip = new String();
				
				tooltip = '<i>' + Highcharts.dateFormat('%A %e %b %Y', this.x) + '</i><br/><br/>';

				this.points.each(function(p){
					if (p.y) {
						tooltip += '<b>' + p.series.name + ':</b> $' + p.y + '<br/>';
					}
				});
				
				return tooltip;
			},
			shared: true
		},

		plotOptions: {
			series: {
				marker: {
					enabled: false
				},
				point: {
					events: {
						click: function() {
							if (this.id_producto) {
								dibujar_data(id, this.id_producto);
							}
						}
					}
				}
			}	
		},

		series: series
	};
	var chart = new Highcharts.Chart(options);
}

function set_max_min_date() {
	var objs = jQuery('#producto_pulldown').val();

	if (!objs) {
		jQuery("#fecha_desde").datepicker('option', 'minDate', null);
		jQuery("#fecha_desde").datepicker('setDate', '-1m');
		jQuery("#fecha_hasta").datepicker('option', 'maxDate', null);
		jQuery("#fecha_hasta").datepicker('setDate', '+0');
		return;
	}

	jQuery.ajax({
		url: '/products/get_dates?product=' + objs.join(','),
		cache: false,
		statusCode: {
			200: function(data) {
				var fecha_min = data.date_from.split('-');
				var fecha_max = data.date_to.split('-');

				jQuery("#fecha_desde").datepicker('option', 'minDate', new Date(fecha_min[0], fecha_min[1]-1, fecha_min[2]));
				jQuery("#fecha_desde").datepicker('option', 'maxDate', new Date(fecha_max[0], fecha_max[1]-1, fecha_max[2]));
				jQuery("#fecha_desde").datepicker('setDate', new Date(fecha_min[0], fecha_min[1]-1, fecha_min[2]));
				
				jQuery("#fecha_hasta").datepicker('option', 'minDate', new Date(fecha_min[0], fecha_min[1]-1, fecha_min[2]));
				jQuery("#fecha_hasta").datepicker('option', 'maxDate', new Date(fecha_max[0], fecha_max[1]-1, fecha_max[2]));	
				jQuery("#fecha_hasta").datepicker('setDate', new Date(fecha_max[0], fecha_max[1]-1, fecha_max[2]));
			},
			400: function() {
				alert('Error 400!');
			}
		}
	});
}

jQuery(window).load(function() {
	jQuery(".chzn-select").chosen();
	dibujar_pulldown_productos('start_up');
	jQuery("#fecha_desde").datepicker();
	jQuery("#fecha_hasta").datepicker();

	Highcharts.setOptions({
		lang: {
			loading: 'Cargando...',
			months: [
				'enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre',
				'octubre', 'noviembre', 'diciembre'
			],
			weekdays: [ 'domingo', 'lunes', 'martes', 'mi' + String.fromCharCode(233) + 'rcoles', 'jueves', 'viernes', 's' + String.fromCharCode(225) + 'bado' ],
			thousandsSep: ',',
			resetZoom: 'volver atr' + String.fromCharCode(225) + 's',
			downloadPNG: 'Descargar imagen PNG',
			downloadJPEG: 'Descargar imagen JPEG',
			downloadPDF: 'Descargar documento PDF',
			downloadSVG: 'Descargar archivo SVG'
		}
	});
});

</script>
<%= javascript_include_tag "jquery-ui-1.8.14.custom.min", "jquery-ui-datepicker-es" %>
<% end %>

<style type="text/css">

.pulldown_selector {
	font-size: 12px;
	width: 240px;
}

span.error {
	position: relative;
	top: 180px;
	left: 100px;
	font-size: 16px;
	font-weight: bold;
}

</style>

<div style="height: 600px; width: 250px;">

<form name="buscar_producto" id="buscar_producto">
<input type="hidden" name="class" value="pulldown_selector chzn-select"/>
<input type="hidden" name="data-placeholder" value="Producto"/>
<input type="hidden" name="title" value="Producto"/>

<span class="pulldown_span" id="span_categoria_pulldown"><%= image_tag "ajax-bar-loader.gif", :size => "238x30" %></span><span class="pulldown_span" id="span_retailer_pulldown"><%= image_tag "ajax-bar-loader.gif", :size => "238x30" %></span>

<% for p in @properties %>
<span class="pulldown_span" id="span_<%= p[:field] %>_pulldown"><%= image_tag "ajax-bar-loader.gif", :size => "238x30" %></span>
<% end %>

</form>

<form name="parametros_grafico" id="parametros_grafico" method="post" action="/dashboard/hc_grafico_producto" target="_new">
<input type="hidden" name="t" id="t">
<input type="hidden" name="excel" id="excel">
<input type="hidden" name="retailer" id="retailer">

<span class="pulldown_span" id="span_producto_pulldown"><%= image_tag "ajax-bar-loader.gif", :size => "238x30" %></select>
</span>
<br/>
<br/>
<%= render "shared/periodo_pulldown" %>
<br/>
<div class="date_div" style="display: inline; float: left">
Desde:
<input class="date_input" type="text" name="fecha_desde" id="fecha_desde" size="8" value="<%= (Date.current - 1.month).strftime("%d/%m/%Y") %>"/>
</div>

<div class="date_div">
Hasta:
<input class="date_input" type="text" name="fecha_hasta" id="fecha_hasta" size="8" value="<%= (Date.current).strftime("%d/%m/%Y") %>"/>
</div>

<input type="button" onClick="graficar(0);" id="boton_ver" value="Ver"/>
<input type="button" onClick="graficar('excel');" id="boton_ver_excel" value="Ver Excel"/>
</form>

</div>

<div style="position: relative; top: -600px; left: 250px; width: 550px; height: 500px;" id="chart">
<div id="chart_0" style="height: 500px; width: 550px;"></div>
<div style="display: none; width: 550px;" id="history_buttons">
<p style="text-align: center;">
<input type="button" id="history_back" disabled value="&lt;--" onClick="showhistorychart(-1);">&nbsp;
<input type="button" id="history_forward" disabled value="--&gt;" onClick="showhistorychart(1);">&nbsp;
</p>
</div>
</div>

<script type="text/javascript">

</script>